version: 2.1


jobs:
  ui-web-testing:
    docker:
      - image: cimg/openjdk:17.0-browsers

    working_directory: ~/ui_api_testing

    environment:
      MAVEN_OPTS: -Xmx4200m -Xms1024m

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Docker Compose Up
          command: |
            cd ui-compend
            set -x
            docker-compose up -d
            sleep 20
      - run:
          name: Verify docker network
          command: docker network ls

      - run:
          name: Verify running containers
          command: docker ps

      - restore_cache:
          keys:
            - $CIRCLE_PROJECT_REPONAME-{{ checksum "pom.xml" }}
            - $CIRCLE_PROJECT_REPONAME-

      - run: mvn dependency:go-offline compile compiler:testCompile
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}

      - run:
          name: Run UI Tests
          command: mvn clean test -pl ui-compend -e
          when: always

      - run:
          name: Make history dir for allure reports
          command: mkdir ui-compend/target/allure-results/history
          when: always

      - run:
          name: Get previous artifact links
          command: |
            echo $CIRCLE_PROJECT_USERNAME
            echo $CIRCLE_PROJECT_REPONAME
            CIRCLE_PREVIOUS_BUILD_NUM=`expr $CIRCLE_BUILD_NUM - 1`
            curl -H "Circle-Token:$CIRCLE_API_TOKEN" https://circleci.com/api/v2/project/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PREVIOUS_BUILD_NUM/artifacts | grep -o 'https:\/\/[^"]*Allure\/history\/.*\.json' > artifacts.txt || true
          when: always

      - run: cat artifacts.txt || true

      - run:
          name: Download artifacts history
          command: wget --header="Circle-Token:$CIRCLE_API_TOKEN" -i artifacts.txt
          when: always

      - run:
          name: Rename and copy history artifacts to allure-result
          command: |
            pwd        
            cp history.json ui-compend/target/allure-results/history/ && cp history-trend.json ui-compend/target/allure-results/history/ || true
            cp categories-trend.json ui-compend/target/allure-results/history/ && cp duration-trend.json ui-compend/target/allure-results/history/ || true
            cp retry-trend.json ui-compend/target/allure-results/history/ || true
            ls -l ui-compend/target/allure-results/history || true
          when: always

      - run:
          name: Save test results
          command: |
            mkdir -p ~/ui-compend/test-results/junit/
            find . -type f -regex ".*/ui-compend/target/surefire-reports/junitreports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/ui-compend/test-results

      - store_artifacts:
          path: ~/ui-compend/test-results/junit

      - run:
          name: Generate Allure report
          command: mvn allure:report -pl ui-compend
          when: always

      - store_artifacts:
          path: ui-compend/target/site/allure-maven-plugin
          destination: Allure

      - run:
          name: Check artifacts
          command: |
            ls -l ui-compend/target/site/allure-maven-plugin || true
            pwd
            ls -l ui-compend/target/site/allure-maven-plugin/history || true

  api-bin-testing:
    docker:
      - image: cimg/openjdk:17.0.6
    working_directory: ~/api-bin

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - restore_cache:
          keys:
            - $CIRCLE_PROJECT_REPONAME-{{ checksum "pom.xml" }}
            - $CIRCLE_PROJECT_REPONAME-
            -
      - run: mvn dependency:go-offline compile compiler:testCompile
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}
      - run:
          name: Install Maven
          command: mvn clean install -DskipTests
      - run:
          name: Execute Tests
          command: mvn clean test -pl api-bin
          no_output_timeout: 180m


workflows:
  regression:
    jobs:
      - ui-web-testing
      - api-bin-testing

